version: "3"

networks:
  app-network:
    external: true

services:
  ##1
  springbootApp80:
    image: news_management
    build:
      context: news-management
      dockerfile: Dockerfile
    environment:
      PORT: 8080
      server_port: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://dbpostgresql:5432/newsManagement
    ports:
      - 8080:8080
    depends_on:
      - dbpostgresql
      - redis
    networks:
      - app-network

  dbpostgresql:
    container_name: postgres
    image: postgres:14.0
    ports:
      - "5436:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: newsManagement
    networks:
        - app-network

  redis:
    container_name: redis
    image: 'redis'
    ports:
      - "6379:6379"
    networks:
      - app-network


  ##2
  springbootApp82:
    image: user_security
    build:
      context: user-securirty
      dockerfile: Dockerfile
    environment:
      PORT: 8002
      server_port: 8002
      SPRING_DATASOURCE_URL: jdbc:postgresql://dbpostgresql2:5432/user-security
    ports:
      - 8002:8002
    depends_on:
      - dbpostgresql2
    networks:
      - app-network

  dbpostgresql2:
    container_name: postgres2
    image: postgres:14.0
    ports:
      - "5437:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: user-security
    networks:
      - app-network